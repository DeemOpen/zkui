#!/bin/bash
### BEGIN INIT INFO
# Provides:          Zookeeper UI
# Required-Start:    $local_fs $network $named $time $syslog
# Required-Stop:     $local_fs $network $named $time $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Description:       Zookeeper web application for Zookeeper monitoring
### END INIT INFO

WORKING_DIRECTORY=/opt/zookeeper-ui
SCRIPT="java -jar $WORKING_DIRECTORY/zkui-jar-with-dependencies.jar"
RUNAS=zookeeper
NAME=zookeeper-ui
PIDFILE=/var/run/$NAME.pid
LOGFILE=/var/log/zookeeper/$NAME.log
DESC="Zookeeper UI"

cd $WORKING_DIRECTORY

# specific to zkui
export CONFIG_FILE="$WORKING_DIRECTORY/config.cfg"


# Load the VERBOSE setting and other rcS variables
. /lib/init/vars.sh

# Define LSB log_* functions.
# Depend on lsb-base (>= 3.2-14) to ensure that this file is present
# and status_of_proc is working.
. /lib/lsb/init-functions

start() {
  if [ -f $PIDFILE ] && kill -0 $(cat $PIDFILE); then
    echo 'Service already running' >&2
    return 1
  fi
  echo 'Starting service' >&2
  local CMD="$SCRIPT &> \"$LOGFILE\" & echo \$!"
  su -c "$CMD" $RUNAS > "$PIDFILE"
  echo 'Service started' >&2
}

stop() {
  if [ ! -f "$PIDFILE" ] || ! kill -0 $(cat "$PIDFILE"); then
    echo 'Service not running' >&2
    return 1
  fi
  echo 'Stopping service' >&2
  kill -15 $(cat "$PIDFILE") && rm -f "$PIDFILE"
  echo 'Service stopped' >&2
}


status(){
        printf "%-50s" "Checking $NAME..."
        if [ -f $PIDFILE ]; then
            PID=`cat $PIDFILE`
            if [ -z "`ps axf | grep ${NAME} | grep -v grep`" ]; then
                printf "%s\n" "Process dead but pidfile exists"
            else
                echo "Running"
            fi
        else
            printf "%s\n" "Service not running"
        fi
}


case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  restart)
    stop
    start
    ;;
  status)
     status
     ;;
  *)
    echo "Usage: $0 {start|stop|status|restart}"
esac

exit 0